# note: dictionary and sets can store nodes that are unique to one another value wise

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def hasCycle(self, head: Optional[ListNode]) -> bool:
        dic = {}
        while head:
            if head in dic:
                return True
            dic[head] = True
            head = head.next
        return False

# 0(1) using hare tortoise cycle

class Solution:
    def hasCycle(self, head: Optional[ListNode]) -> bool:
        if not head or not head.next:
            return False
        tortoise, hare = head, head
        
        while hare and hare.next:
            tortoise = tortoise.next        
            hare = hare.next.next           
            
            if tortoise == hare:             
                return True
        
        return False

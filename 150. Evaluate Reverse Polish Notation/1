class Solution:
    def evalRPN(self, tokens: List[str]) -> int:
        stack = []
        while len(tokens) > 0:
            token = tokens.pop(0)
            if token in '+-/*':
                first = int(stack.pop())
                second = int(stack.pop())
            if token == '+':
                stack.append(first+second)
            elif token == '-':
                stack.append(second-first)
            elif token == '*':
                stack.append(first*second)
            elif token == '/':
                stack.append(self.round_towards_zero(second/first))
            else:
                stack.append(token)
        return int(stack[-1])
            
    def round_towards_zero(self, n):
        if n > -1 and n < 0:
            return 0
        elif n > 0 and n < 1:
            return 0
        else:
            return int(n)
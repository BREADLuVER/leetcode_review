# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def rightSideView(self, root: Optional[TreeNode]) -> List[int]:
        if not root:
            return []
        self.all = []
        def dfs(root, d):
            if not root:
                return 
            if len(self.all) == d:
                self.all.append([])
            self.all[d].append(root.val)
            dfs(root.left, d+1)
            dfs(root.right, d+1)
        dfs(root, 0)
        print(self.all)
        ans = []
        for i in self.all:
            ans.append(i[-1])
        return ans
            
